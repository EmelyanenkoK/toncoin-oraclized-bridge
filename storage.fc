;; TLB Storage scheme
;; complaint - cell with OpaqueStructure;
;; secp_pubkey#_ pubk:uint256 = SecpPubkey;
;; ed_pubkey#_ pubk:uint256 = EdPubkey;
;; NOTE oracle_address = address hash part, wc should be equal -1
;; oracle#_ ed25519_key:EdPubkey secp256k1:SecpPubkey = Oracle;
;; oracle_address#_ address_hash:uint256 = OracleAddress;
;; oracle_set_data#_ locked:bool 
;;                   unrewarded_stake:Grams
;;                   reward:Grams
;;                   min_auth_num:uint16
;;                   keys:(HashmapE OracleAddress Oracle)
;;                   locked_stakes:(HashmapE OracleAddress Grams)
;;                   complaints:(HashmapE OracleAddress complaint)
;;                    = OracleSetData;
;; swap_to_external_chain_id#_ swap_lt:uint64 = SwapToExtChainId;
;; outcoming_swap#_ amount:Grams external_address:uint160 set_hash:uint256 signatures:(HashmapE SecpPubkey SecpSignature) =  OutcomingSwap;
;; secp_signature#_ signature:bits520 = SecpSignature;
;; NOTE!!! amount here is 64bit, not Grams: SHA256U requires divisibility by 8
;; Note id = SHA256U(<b ext_chain_tx_hash 256 u, wc 8 u, addr_hash 256 u, amount 64 u, b>)
;; swap_to_ton_id#_ id:uint256 = SwapToTonId;
;; incoming_swap#_ ext_chain_tx_hash:uint256
;;                 wc:int8 addr_hash:uint256 amount:uint64
;;                 set_hash:uint256 authorization_num:uint16 authorizations:(HashmapE OracleAddress bool) = IncomingSwap;
;; candidate#_ credit:Grams oracle:Oracle = Candidate;
;; set_hash#_ hash:uint256 = SetHash;
;; storage#_
;;             total_staked:Grams
;;             total_locked:Grams
;;             current_set_hash:SetHash
;;             sets:(HashmapE SetHash OracleSetData)
;;             candidates:(HashmapE OracleAddress Candidate)
;;             outcoming_swaps:(HashmapE SwapToEthId OutcomingSwap)
;;             incoming_swaps:(HashmapE SwapToTonId IncomingSwap)
;;
;;
;; 71 config parameter
;; oracle#_ ed25519_key:uint256 secp256k1:uint256 = Oracle;
;; oracle_address#_ address_hash:uint256 = OracleAddress;
;; oracle_set#_ flat_stake:Grams min_auth_num:uint16 seqno:uint32 oracles:(HashMapE uint16 OracleAddress) = ExtChainOracleSet;
;; external_chain_oracles#_ current_set:ExtChainOracleSet = ConfigParam 71;



(int, int, int, cell, cell, cell, cell) load_data () inline {
  var ds = get_data().begin_parse();
  return (
          ds~load_grams(),
          ds~load_grams(),
          ds~load_uint(256),
          ds~load_dict(),
          ds~load_dict(),
          ds~load_dict(),
          ds~load_dict()
          );
}

() save_data (
              int total_staked,
              int total_locked,
              int current_set_hash,
              cell sets,
              cell candidates,
              cell outcoming_swaps,
              cell incoming_swaps) impure inline {
  var st = begin_cell().store_grams(total_staked)
                       .store_grams(total_locked)
                       .store_uint(current_set_hash, 256)
                       .store_dict(sets)
                       .store_dict(candidates)
                       .store_dict(outcoming_swaps)
                       .store_dict(incoming_swaps)
            .end_cell();
  set_data(st);
}
