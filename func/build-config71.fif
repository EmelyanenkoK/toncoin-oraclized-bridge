#!/usr/bin/fift -s
"TonUtil.fif" include
"GetOpt.fif" include

{ show-options-help 1 halt } : usage

"config71" =: savefile

begin-options
    "<bridge-addr> <oracles-addr> <external-addr> <oracle1-addr> <oracle1-secp-pubkey> ... [-o<savefile>]" +cr +tab
      +"Creates bag of cells suitable for uploading to TON config 71/72/73: oracle set for cross-chain bridge "
      +"and saves it into <savefile>.boc (" savefile $+ +".boc by default)"
    disable-digit-options generic-help-setopt
    "o" "--output" { =: savefile } short-long-option-arg
      "Save result into specified file" option-help
    "h" "--help" { usage } short-long-option
      "Shows a help message" option-help
parse-options

$# 5 < ' usage if
$# 1 - 2 mod ' usage if
$# 3 - 2 / constant N
$1 parse-smc-addr drop
swap 1+ abort"Bridge address should be defined on masterchain"
constant bridge-addr
$2 parse-smc-addr drop 
swap 1+ abort"Oracles address should be defined on masterchain"
constant oracles-addr
$3 parse-int =: external-addr
dictnew 4
{ dup $() parse-smc-addr drop swap 1+ abort"Oracle address should be defined on masterchain"
  swap 1+ dup $() parse-int <b swap 256 u, b> <s swap 1+
  3 -roll swap rot 256 udict! drop swap
} N times drop constant oracles

<b bridge-addr 256 u, 
   oracles-addr 256 u,
   oracles dict,
   external-addr 256 u,
b> constant config71

."Config71 built: " cr
."hash: " cr
config71 hash 256 u>B Bx. cr
config71 <s csr. cr
config71 2 boc+>B 
savefile +".boc" 
tuck B>file
."(Saved to file " type .")" cr
