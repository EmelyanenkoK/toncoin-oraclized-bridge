(int, int) get_bridge_data() method_id {
    (int total_staked, int total_locked, int current_set_hash, cell sets, cell candidates, cell external_votings, cell ton_votings) = load_data();
    return (total_staked, total_locked);
}

(tuple) get_external_voting_data(int voting_id) method_id {
    (int total_staked, int total_locked, int current_set_hash, cell sets, cell candidates, cell external_votings, cell ton_votings) = load_data();
    (slice voting_data, int found?) = external_votings.udict_get?(256, voting_id);
    throw_unless(309, found?);
    (int _unused,
     cell  stored_signatures) = (voting_data~load_uint(256),
                                 voting_data~load_dict());
    tuple list = null();

    int secp_key = -1;
    do {
      (secp_key, slice sig, int found?) = stored_signatures.udict_get_next?(256, secp_key);
      if (found?) {
        (int r, int s, int v) = (sig~load_uint(256),
                                 sig~load_uint(256),
                                 sig~load_uint(8));
        list = cons( pair( secp_key, triple(r,s,v)), list);
      }
    } until (~ found?);
    return (list);
}


(int, int, int, tuple) get_ton_voting_status(int voting_id) method_id {
    (int total_staked, int total_locked, int current_set_hash, cell sets, cell candidates, cell external_votes, cell ton_votings) = load_data();
    (cell _voting_data, int found?) = ton_votings.udict_get_ref?(256, voting_id);
    throw_unless(309, found?);
    slice voting_data = _voting_data.begin_parse();
    (
     int executed?,
     int execution_utime,
     int set_hash,
     int auth_num,
     cell auths) = (voting_data~load_uint(1),
                    voting_data~load_int(33),
                    voting_data~load_uint(256),
                    voting_data~load_uint(16),
                    voting_data~load_dict());
    tuple list = null();
    int oid = -1;
    do {
      (oid, slice _unused, int found?) = auths.udict_get_next?(256, oid);
      if (found?) {
        list = cons( oid, list);
      }
    } until (~ found?);
   
   return (executed?, execution_utime, auth_num, list);
}
